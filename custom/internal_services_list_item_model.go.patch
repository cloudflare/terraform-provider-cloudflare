diff --git a/internal/services/list_item/model.go b/internal/services/list_item/model.go
index 6b1ab4215..c2623c13b 100644
--- a/internal/services/list_item/model.go
+++ b/internal/services/list_item/model.go
@@ -9,46 +9,49 @@ import (
 )
 
 type ListItemResultEnvelope struct {
-	Result *[]*ListItemBodyModel `json:"result"`
+	Result ListItemModel `json:"result"`
 }
 
 type ListItemModel struct {
-	AccountID   types.String                                    `tfsdk:"account_id" path:"account_id,required"`
 	ListID      types.String                                    `tfsdk:"list_id" path:"list_id,required"`
-	ItemID      types.String                                    `tfsdk:"item_id" path:"item_id,optional"`
-	Body        *[]*ListItemBodyModel                           `tfsdk:"body" json:"body,required,no_refresh"`
-	ASN         types.Int64                                     `tfsdk:"asn" json:"asn,computed"`
-	Comment     types.String                                    `tfsdk:"comment" json:"comment,computed"`
-	CreatedOn   types.String                                    `tfsdk:"created_on" json:"created_on,computed"`
-	ID          types.String                                    `tfsdk:"id" json:"id,computed"`
-	IP          types.String                                    `tfsdk:"ip" json:"ip,computed"`
-	ModifiedOn  types.String                                    `tfsdk:"modified_on" json:"modified_on,computed"`
+	AccountID   types.String                                    `tfsdk:"account_id" path:"account_id,required"`
+	ID          types.String                                    `tfsdk:"id" path:"item_id,computed"`
+	ASN         types.Int64                                     `tfsdk:"asn" json:"asn,optional"`
+	Comment     types.String                                    `tfsdk:"comment" json:"comment,optional"`
+	IP          types.String                                    `tfsdk:"ip" json:"ip,optional"`
+	Hostname    customfield.NestedObject[ListItemHostnameModel] `tfsdk:"hostname" json:"hostname,optional"`
+	Redirect    customfield.NestedObject[ListItemRedirectModel] `tfsdk:"redirect" json:"redirect,optional"`
 	OperationID types.String                                    `tfsdk:"operation_id" json:"operation_id,computed,no_refresh"`
-	Hostname    customfield.NestedObject[ListItemHostnameModel] `tfsdk:"hostname" json:"hostname,computed"`
-	Redirect    customfield.NestedObject[ListItemRedirectModel] `tfsdk:"redirect" json:"redirect,computed"`
+	ModifiedOn  types.String                                    `tfsdk:"modified_on" json:"modified_on,computed"`
+	CreatedOn   types.String                                    `tfsdk:"created_on" json:"created_on,computed"`
 }
 
 func (m ListItemModel) MarshalJSON() (data []byte, err error) {
-	return apijson.MarshalRoot(m.Body)
+	return apijson.MarshalRoot(m)
 }
 
-func (m ListItemModel) MarshalJSONForUpdate(state ListItemModel) (data []byte, err error) {
-	return apijson.MarshalForUpdate(m.Body, state.Body)
+// MarshalSingleToCollectionJSON takes a single `ListItemModel` and wraps
+// it as a collection in order to satisfy the API requirements.
+//
+// The endpoint is designed for bulk creation however, in the provider,
+// we only manage a single resource at a time.
+func (m ListItemModel) MarshalSingleToCollectionJSON(existingJSON []byte) (data []byte) {
+	var output []byte
+	output = append(output, []byte("[")...)
+	output = append(output, existingJSON...)
+	output = append(output, []byte("]")...)
+	return output
 }
 
-type ListItemBodyModel struct {
-	ASN      types.Int64                `tfsdk:"asn" json:"asn,optional"`
-	Comment  types.String               `tfsdk:"comment" json:"comment,optional"`
-	Hostname *ListItemBodyHostnameModel `tfsdk:"hostname" json:"hostname,optional"`
-	IP       types.String               `tfsdk:"ip" json:"ip,optional"`
-	Redirect *ListItemBodyRedirectModel `tfsdk:"redirect" json:"redirect,optional"`
+func (m ListItemModel) MarshalJSONForUpdate(state ListItemModel) (data []byte, err error) {
+	return apijson.MarshalForUpdate(m, state)
 }
 
-type ListItemBodyHostnameModel struct {
+type ListItemHostnameModel struct {
 	URLHostname types.String `tfsdk:"url_hostname" json:"url_hostname,required"`
 }
 
-type ListItemBodyRedirectModel struct {
+type ListItemRedirectModel struct {
 	SourceURL           types.String `tfsdk:"source_url" json:"source_url,required"`
 	TargetURL           types.String `tfsdk:"target_url" json:"target_url,required"`
 	IncludeSubdomains   types.Bool   `tfsdk:"include_subdomains" json:"include_subdomains,computed_optional"`
@@ -57,17 +60,3 @@ type ListItemBodyRedirectModel struct {
 	StatusCode          types.Int64  `tfsdk:"status_code" json:"status_code,computed_optional"`
 	SubpathMatching     types.Bool   `tfsdk:"subpath_matching" json:"subpath_matching,computed_optional"`
 }
-
-type ListItemHostnameModel struct {
-	URLHostname types.String `tfsdk:"url_hostname" json:"url_hostname,computed"`
-}
-
-type ListItemRedirectModel struct {
-	SourceURL           types.String `tfsdk:"source_url" json:"source_url,computed"`
-	TargetURL           types.String `tfsdk:"target_url" json:"target_url,computed"`
-	IncludeSubdomains   types.Bool   `tfsdk:"include_subdomains" json:"include_subdomains,computed"`
-	PreservePathSuffix  types.Bool   `tfsdk:"preserve_path_suffix" json:"preserve_path_suffix,computed"`
-	PreserveQueryString types.Bool   `tfsdk:"preserve_query_string" json:"preserve_query_string,computed"`
-	StatusCode          types.Int64  `tfsdk:"status_code" json:"status_code,computed"`
-	SubpathMatching     types.Bool   `tfsdk:"subpath_matching" json:"subpath_matching,computed"`
-}
