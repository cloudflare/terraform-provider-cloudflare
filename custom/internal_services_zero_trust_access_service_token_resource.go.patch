diff --git a/internal/services/zero_trust_access_service_token/resource.go b/internal/services/zero_trust_access_service_token/resource.go
index 835d3e389..533ba9129 100644
--- a/internal/services/zero_trust_access_service_token/resource.go
+++ b/internal/services/zero_trust_access_service_token/resource.go
@@ -14,6 +14,7 @@ import (
 	"github.com/cloudflare/terraform-provider-cloudflare/internal/apijson"
 	"github.com/cloudflare/terraform-provider-cloudflare/internal/importpath"
 	"github.com/cloudflare/terraform-provider-cloudflare/internal/logging"
+	"github.com/hashicorp/terraform-plugin-framework/path"
 	"github.com/hashicorp/terraform-plugin-framework/resource"
 	"github.com/hashicorp/terraform-plugin-framework/types"
 )
@@ -103,6 +104,8 @@ func (r *ZeroTrustAccessServiceTokenResource) Create(ctx context.Context, req re
 
 func (r *ZeroTrustAccessServiceTokenResource) Update(ctx context.Context, req resource.UpdateRequest, resp *resource.UpdateResponse) {
 	var data *ZeroTrustAccessServiceTokenModel
+	secret := types.StringNull()
+	req.State.GetAttribute(ctx, path.Root("client_secret"), &secret)
 
 	resp.Diagnostics.Append(req.Plan.Get(ctx, &data)...)
 
@@ -151,7 +154,9 @@ func (r *ZeroTrustAccessServiceTokenResource) Update(ctx context.Context, req re
 		resp.Diagnostics.AddError("failed to deserialize http request", err.Error())
 		return
 	}
+
 	data = &env.Result
+	data.ClientSecret = secret
 
 	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
 }
@@ -159,6 +164,9 @@ func (r *ZeroTrustAccessServiceTokenResource) Update(ctx context.Context, req re
 func (r *ZeroTrustAccessServiceTokenResource) Read(ctx context.Context, req resource.ReadRequest, resp *resource.ReadResponse) {
 	var data *ZeroTrustAccessServiceTokenModel
 
+	secret := types.StringNull()
+	req.State.GetAttribute(ctx, path.Root("client_secret"), &secret)
+
 	resp.Diagnostics.Append(req.State.Get(ctx, &data)...)
 
 	if resp.Diagnostics.HasError() {
@@ -197,7 +205,9 @@ func (r *ZeroTrustAccessServiceTokenResource) Read(ctx context.Context, req reso
 		resp.Diagnostics.AddError("failed to deserialize http request", err.Error())
 		return
 	}
+
 	data = &env.Result
+	data.ClientSecret = secret
 
 	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
 }
