diff --git a/internal/services/zone_hold/schema.go b/internal/services/zone_hold/schema.go
index 634ac4c7d..9b5dc04ff 100644
--- a/internal/services/zone_hold/schema.go
+++ b/internal/services/zone_hold/schema.go
@@ -9,7 +9,6 @@ import (
 	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
 	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
 	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
-	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
 	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
 )
 
@@ -32,7 +31,6 @@ func ResourceSchema(ctx context.Context) schema.Schema {
 				Description: "If `hold_after` is provided and future-dated, the hold will be temporarily disabled,\nthen automatically re-enabled by the system at the time specified\nin this RFC3339-formatted timestamp. A past-dated `hold_after` value will have\nno effect on an existing, enabled hold. Providing an empty string will set its value\nto the current time.",
 				Computed:    true,
 				Optional:    true,
-				Default:     stringdefault.StaticString(""),
 			},
 			"include_subdomains": schema.BoolAttribute{
 				Description: "If `true`, the zone hold will extend to block any subdomain of the given zone, as well\nas SSL4SaaS Custom Hostnames. For example, a zone hold on a zone with the hostname\n'example.com' and include_subdomains=true will block 'example.com',\n'staging.example.com', 'api.staging.example.com', etc.",
