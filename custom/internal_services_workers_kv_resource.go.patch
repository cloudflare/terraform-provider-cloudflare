diff --git a/internal/services/workers_kv/resource.go b/internal/services/workers_kv/resource.go
index 5cd67c1d5..48adbc75e 100644
--- a/internal/services/workers_kv/resource.go
+++ b/internal/services/workers_kv/resource.go
@@ -7,6 +7,7 @@ import (
 	"fmt"
 	"io"
 	"net/http"
+	"net/url"
 
 	"github.com/cloudflare/cloudflare-go/v4"
 	"github.com/cloudflare/cloudflare-go/v4/kv"
@@ -64,21 +65,18 @@ func (r *WorkersKVResource) Create(ctx context.Context, req resource.CreateReque
 		return
 	}
 
-	dataBytes, contentType, err := data.MarshalMultipart()
-	if err != nil {
-		resp.Diagnostics.AddError("failed to serialize multipart http request", err.Error())
-		return
-	}
+	data.KeyName = types.StringValue(url.PathEscape(data.KeyName.ValueString()))
+
 	res := new(http.Response)
 	env := WorkersKVResultEnvelope{*data}
-	_, err = r.client.KV.Namespaces.Values.Update(
+	_, err := r.client.KV.Namespaces.Values.Update(
 		ctx,
 		data.NamespaceID.ValueString(),
 		data.KeyName.ValueString(),
 		kv.NamespaceValueUpdateParams{
 			AccountID: cloudflare.F(data.AccountID.ValueString()),
 		},
-		option.WithRequestBody(contentType, dataBytes),
+		option.WithRequestBody("application/octet-stream", []byte(data.Value.ValueString())),
 		option.WithResponseBodyInto(&res),
 		option.WithMiddleware(logging.Middleware(ctx)),
 	)
@@ -115,21 +113,17 @@ func (r *WorkersKVResource) Update(ctx context.Context, req resource.UpdateReque
 		return
 	}
 
-	dataBytes, contentType, err := data.MarshalMultipart()
-	if err != nil {
-		resp.Diagnostics.AddError("failed to serialize multipart http request", err.Error())
-		return
-	}
+	data.KeyName = types.StringValue(url.PathEscape(data.KeyName.ValueString()))
 	res := new(http.Response)
 	env := WorkersKVResultEnvelope{*data}
-	_, err = r.client.KV.Namespaces.Values.Update(
+	_, err := r.client.KV.Namespaces.Values.Update(
 		ctx,
 		data.NamespaceID.ValueString(),
 		data.KeyName.ValueString(),
 		kv.NamespaceValueUpdateParams{
 			AccountID: cloudflare.F(data.AccountID.ValueString()),
 		},
-		option.WithRequestBody(contentType, dataBytes),
+		option.WithRequestBody("application/octet-stream", []byte(data.Value.ValueString())),
 		option.WithResponseBodyInto(&res),
 		option.WithMiddleware(logging.Middleware(ctx)),
 	)
@@ -178,6 +172,12 @@ func (r *WorkersKVResource) Read(ctx context.Context, req resource.ReadRequest,
 		resp.Diagnostics.AddError("failed to make http request", err.Error())
 		return
 	}
+	bytes, _ := io.ReadAll(res.Body)
+	if err != nil {
+		resp.Diagnostics.AddError("failed to read response body", err.Error())
+		return
+	}
+	data.Value = types.StringValue(string(bytes))
 	data.ID = data.KeyName
 
 	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
