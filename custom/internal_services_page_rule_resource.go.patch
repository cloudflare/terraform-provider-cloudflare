diff --git a/internal/services/page_rule/resource.go b/internal/services/page_rule/resource.go
index aefe09152..a42ecafb0 100644
--- a/internal/services/page_rule/resource.go
+++ b/internal/services/page_rule/resource.go
@@ -5,6 +5,7 @@ package page_rule
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-plugin-framework/types"
 	"io"
 	"net/http"
 
@@ -15,7 +16,6 @@ import (
 	"github.com/cloudflare/terraform-provider-cloudflare/internal/importpath"
 	"github.com/cloudflare/terraform-provider-cloudflare/internal/logging"
 	"github.com/hashicorp/terraform-plugin-framework/resource"
-	"github.com/hashicorp/terraform-plugin-framework/types"
 )
 
 // Ensure provider defined types fully satisfy framework interfaces.
@@ -174,7 +174,7 @@ func (r *PageRuleResource) Read(ctx context.Context, req resource.ReadRequest, r
 		return
 	}
 	bytes, _ := io.ReadAll(res.Body)
-	err = apijson.Unmarshal(bytes, &env)
+	err = apijson.UnmarshalComputed(bytes, &env)
 	if err != nil {
 		resp.Diagnostics.AddError("failed to deserialize http request", err.Error())
 		return
@@ -210,7 +210,7 @@ func (r *PageRuleResource) Delete(ctx context.Context, req resource.DeleteReques
 }
 
 func (r *PageRuleResource) ImportState(ctx context.Context, req resource.ImportStateRequest, resp *resource.ImportStateResponse) {
-	var data *PageRuleModel = new(PageRuleModel)
+	var data = new(PageRuleModel)
 
 	path_zone_id := ""
 	path_pagerule_id := ""
@@ -229,7 +229,6 @@ func (r *PageRuleResource) ImportState(ctx context.Context, req resource.ImportS
 	data.ID = types.StringValue(path_pagerule_id)
 
 	res := new(http.Response)
-	env := PageRuleResultEnvelope{*data}
 	_, err := r.client.PageRules.Get(
 		ctx,
 		path_pagerule_id,
@@ -244,14 +243,15 @@ func (r *PageRuleResource) ImportState(ctx context.Context, req resource.ImportS
 		return
 	}
 	bytes, _ := io.ReadAll(res.Body)
-	err = apijson.Unmarshal(bytes, &env)
+	pr, err := UnmarshalPageRuleModel(bytes)
 	if err != nil {
 		resp.Diagnostics.AddError("failed to deserialize http request", err.Error())
 		return
 	}
-	data = &env.Result
 
-	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
+	pr.ZoneID = types.StringValue(path_zone_id)
+
+	resp.Diagnostics.Append(resp.State.Set(ctx, &pr)...)
 }
 
 func (r *PageRuleResource) ModifyPlan(_ context.Context, _ resource.ModifyPlanRequest, _ *resource.ModifyPlanResponse) {
