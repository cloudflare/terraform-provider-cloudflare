diff --git a/internal/services/list_item/schema.go b/internal/services/list_item/schema.go
index df8591a8a..2e27cbbc6 100644
--- a/internal/services/list_item/schema.go
+++ b/internal/services/list_item/schema.go
@@ -31,105 +31,23 @@ func ResourceSchema(ctx context.Context) schema.Schema {
 				Required:      true,
 				PlanModifiers: []planmodifier.String{stringplanmodifier.RequiresReplace()},
 			},
-			"item_id": schema.StringAttribute{
-				Description:   "Defines the unique ID of the item in the List.",
-				Optional:      true,
+			"id": schema.StringAttribute{
+				Description:   "The unique ID of the item in the List.",
+				Computed:      true,
 				PlanModifiers: []planmodifier.String{stringplanmodifier.RequiresReplace()},
 			},
-			"body": schema.ListNestedAttribute{
-				Required: true,
-				NestedObject: schema.NestedAttributeObject{
-					Attributes: map[string]schema.Attribute{
-						"asn": schema.Int64Attribute{
-							Description: "Defines a non-negative 32 bit integer.",
-							Optional:    true,
-						},
-						"comment": schema.StringAttribute{
-							Description: "Defines an informative summary of the list item.",
-							Optional:    true,
-						},
-						"hostname": schema.SingleNestedAttribute{
-							Description: "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
-							Optional:    true,
-							Attributes: map[string]schema.Attribute{
-								"url_hostname": schema.StringAttribute{
-									Required: true,
-								},
-							},
-						},
-						"ip": schema.StringAttribute{
-							Description: "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
-							Optional:    true,
-						},
-						"redirect": schema.SingleNestedAttribute{
-							Description: "The definition of the redirect.",
-							Optional:    true,
-							Attributes: map[string]schema.Attribute{
-								"source_url": schema.StringAttribute{
-									Required: true,
-								},
-								"target_url": schema.StringAttribute{
-									Required: true,
-								},
-								"include_subdomains": schema.BoolAttribute{
-									Computed: true,
-									Optional: true,
-									Default:  booldefault.StaticBool(false),
-								},
-								"preserve_path_suffix": schema.BoolAttribute{
-									Computed: true,
-									Optional: true,
-									Default:  booldefault.StaticBool(false),
-								},
-								"preserve_query_string": schema.BoolAttribute{
-									Computed: true,
-									Optional: true,
-									Default:  booldefault.StaticBool(false),
-								},
-								"status_code": schema.Int64Attribute{
-									Description: "Available values: 301, 302, 307, 308.",
-									Computed:    true,
-									Optional:    true,
-									Validators: []validator.Int64{
-										int64validator.OneOf(
-											301,
-											302,
-											307,
-											308,
-										),
-									},
-									Default: int64default.StaticInt64(301),
-								},
-								"subpath_matching": schema.BoolAttribute{
-									Computed: true,
-									Optional: true,
-									Default:  booldefault.StaticBool(false),
-								},
-							},
-						},
-					},
-				},
-			},
 			"asn": schema.Int64Attribute{
-				Description: "Defines a non-negative 32 bit integer.",
-				Computed:    true,
+				Description: "A non-negative 32 bit integer",
+				Optional:    true,
 			},
 			"comment": schema.StringAttribute{
-				Description: "Defines an informative summary of the list item.",
-				Computed:    true,
+				Description: "An informative summary of the list item.",
+				Optional:    true,
 			},
 			"created_on": schema.StringAttribute{
 				Description: "The RFC 3339 timestamp of when the item was created.",
 				Computed:    true,
 			},
-			"id": schema.StringAttribute{
-				Description: "The unique ID of the list.",
-				Computed:    true,
-			},
-			"ip": schema.StringAttribute{
-				Description: "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
-				Computed:    true,
-			},
 			"modified_on": schema.StringAttribute{
 				Description: "The RFC 3339 timestamp of when the item was last modified.",
 				Computed:    true,
@@ -140,40 +58,48 @@ func ResourceSchema(ctx context.Context) schema.Schema {
 			},
 			"hostname": schema.SingleNestedAttribute{
 				Description: "Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-).",
-				Computed:    true,
+				Optional:    true,
 				CustomType:  customfield.NewNestedObjectType[ListItemHostnameModel](ctx),
 				Attributes: map[string]schema.Attribute{
 					"url_hostname": schema.StringAttribute{
-						Computed: true,
+						Required: true,
 					},
 				},
 			},
+			"ip": schema.StringAttribute{
+				Description: "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
+				Optional:    true,
+			},
 			"redirect": schema.SingleNestedAttribute{
 				Description: "The definition of the redirect.",
-				Computed:    true,
+				Optional:    true,
 				CustomType:  customfield.NewNestedObjectType[ListItemRedirectModel](ctx),
 				Attributes: map[string]schema.Attribute{
 					"source_url": schema.StringAttribute{
-						Computed: true,
+						Required: true,
 					},
 					"target_url": schema.StringAttribute{
-						Computed: true,
+						Required: true,
 					},
 					"include_subdomains": schema.BoolAttribute{
 						Computed: true,
+						Optional: true,
 						Default:  booldefault.StaticBool(false),
 					},
 					"preserve_path_suffix": schema.BoolAttribute{
 						Computed: true,
+						Optional: true,
 						Default:  booldefault.StaticBool(false),
 					},
 					"preserve_query_string": schema.BoolAttribute{
 						Computed: true,
+						Optional: true,
 						Default:  booldefault.StaticBool(false),
 					},
 					"status_code": schema.Int64Attribute{
 						Description: "Available values: 301, 302, 307, 308.",
 						Computed:    true,
+						Optional:    true,
 						Validators: []validator.Int64{
 							int64validator.OneOf(
 								301,
@@ -186,6 +112,7 @@ func ResourceSchema(ctx context.Context) schema.Schema {
 					},
 					"subpath_matching": schema.BoolAttribute{
 						Computed: true,
+						Optional: true,
 						Default:  booldefault.StaticBool(false),
 					},
 				},
